export const eslint = {
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: 6,
    project: "tsconfig.json",
    tsconfigRootDir: __dirname,
    sourceType: "module",
    ecmaFeatures: {
      ts: true,
    },
  },
  plugins: ["prettier", "@typescript-eslint/eslint-plugin"],
  extends: ["airbnb"],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: [".eslintrc.js"],
  rules: {
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "class-methods-use-this": "off",
    "import/prefer-default-export": "off",
    "no-useless-constructor": "off",
    "no-unused-vars": "off",
    "no-empty-function": "off",
    "import/no-unresolved": "off",
    "import/extensions": "off",
    "no-console": "off",
    "sort-imports": "off",
    "no-undef": "off",
    "func-names": "off",
    "no-process-exit": "off",
    "object-shorthand": "off",
    "class-methods-use-this": "off",
    "lines-between-class-members": "off",
    "import/order": "off",
    "operator-linebreak": "off",
    "no-continue": "off",
    "no-param-reassign": "off",
    "implicit-arrow-linebreak": "off",
    "max-len": ["error", { code: 500 }],
    "no-await-in-loop": "off",
    "object-curly-newline": "off",
    "function-paren-newline": "off",
    "no-underscore-dangle": "off",
    "no-constant-condition": "off",
    "no-promise-executor-return": "off",
    "no-loop-func": "off",
    "brace-style": "off",
    indent: "off",
    "comma-style": "off",
    radix: "off",
    "no-empty": "off",
    "import/no-import-module-exports": "off",
  },
  settings: {
    "import/resolver": {
      alias: {
        map: [
          ["@", "."],
          // Add more aliases as needed
        ],
        extensions: [".ts", ".json"],
      },
      node: {
        extensions: [".ts", ".json"],
        paths: [".", "./src"], // Add other paths as needed
      },
    },
  },
};
